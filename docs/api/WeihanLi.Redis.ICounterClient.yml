### YamlMime:ManagedReference
items:
- uid: WeihanLi.Redis.ICounterClient
  commentId: T:WeihanLi.Redis.ICounterClient
  id: ICounterClient
  parent: WeihanLi.Redis
  children:
  - WeihanLi.Redis.ICounterClient.Base
  - WeihanLi.Redis.ICounterClient.Count
  - WeihanLi.Redis.ICounterClient.Decrease
  - WeihanLi.Redis.ICounterClient.Decrease(System.Int32)
  - WeihanLi.Redis.ICounterClient.DecreaseAsync
  - WeihanLi.Redis.ICounterClient.DecreaseAsync(System.Int32)
  - WeihanLi.Redis.ICounterClient.Increase
  - WeihanLi.Redis.ICounterClient.Increase(System.Int32)
  - WeihanLi.Redis.ICounterClient.IncreaseAsync
  - WeihanLi.Redis.ICounterClient.IncreaseAsync(System.Int32)
  - WeihanLi.Redis.ICounterClient.Reset
  - WeihanLi.Redis.ICounterClient.ResetAsync
  langs:
  - csharp
  - vb
  name: ICounterClient
  nameWithType: ICounterClient
  fullName: WeihanLi.Redis.ICounterClient
  type: Interface
  source:
    remote:
      path: src/WeihanLi.Redis/String/Counter.cs
      branch: dev
      repo: https://github.com/WeihanLi/weihanli.redis.git
    id: ICounterClient
    path: src/WeihanLi.Redis/String/Counter.cs
    startLine: 8
  assemblies:
  - WeihanLi.Redis
  namespace: WeihanLi.Redis
  syntax:
    content: 'public interface ICounterClient : IRedisClient'
    content.vb: >-
      Public Interface ICounterClient
          Inherits IRedisClient
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: WeihanLi.Redis.ICounterClient.Count
  commentId: M:WeihanLi.Redis.ICounterClient.Count
  id: Count
  parent: WeihanLi.Redis.ICounterClient
  langs:
  - csharp
  - vb
  name: Count()
  nameWithType: ICounterClient.Count()
  fullName: WeihanLi.Redis.ICounterClient.Count()
  type: Method
  source:
    remote:
      path: src/WeihanLi.Redis/String/Counter.cs
      branch: dev
      repo: https://github.com/WeihanLi/weihanli.redis.git
    id: Count
    path: src/WeihanLi.Redis/String/Counter.cs
    startLine: 10
  assemblies:
  - WeihanLi.Redis
  namespace: WeihanLi.Redis
  syntax:
    content: long Count()
    return:
      type: System.Int64
    content.vb: Function Count As Long
  overload: WeihanLi.Redis.ICounterClient.Count*
- uid: WeihanLi.Redis.ICounterClient.Base
  commentId: P:WeihanLi.Redis.ICounterClient.Base
  id: Base
  parent: WeihanLi.Redis.ICounterClient
  langs:
  - csharp
  - vb
  name: Base
  nameWithType: ICounterClient.Base
  fullName: WeihanLi.Redis.ICounterClient.Base
  type: Property
  source:
    remote:
      path: src/WeihanLi.Redis/String/Counter.cs
      branch: dev
      repo: https://github.com/WeihanLi/weihanli.redis.git
    id: Base
    path: src/WeihanLi.Redis/String/Counter.cs
    startLine: 12
  assemblies:
  - WeihanLi.Redis
  namespace: WeihanLi.Redis
  syntax:
    content: long Base { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: ReadOnly Property Base As Long
  overload: WeihanLi.Redis.ICounterClient.Base*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: WeihanLi.Redis.ICounterClient.Reset
  commentId: M:WeihanLi.Redis.ICounterClient.Reset
  id: Reset
  parent: WeihanLi.Redis.ICounterClient
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: ICounterClient.Reset()
  fullName: WeihanLi.Redis.ICounterClient.Reset()
  type: Method
  source:
    remote:
      path: src/WeihanLi.Redis/String/Counter.cs
      branch: dev
      repo: https://github.com/WeihanLi/weihanli.redis.git
    id: Reset
    path: src/WeihanLi.Redis/String/Counter.cs
    startLine: 14
  assemblies:
  - WeihanLi.Redis
  namespace: WeihanLi.Redis
  syntax:
    content: bool Reset()
    return:
      type: System.Boolean
    content.vb: Function Reset As Boolean
  overload: WeihanLi.Redis.ICounterClient.Reset*
- uid: WeihanLi.Redis.ICounterClient.ResetAsync
  commentId: M:WeihanLi.Redis.ICounterClient.ResetAsync
  id: ResetAsync
  parent: WeihanLi.Redis.ICounterClient
  langs:
  - csharp
  - vb
  name: ResetAsync()
  nameWithType: ICounterClient.ResetAsync()
  fullName: WeihanLi.Redis.ICounterClient.ResetAsync()
  type: Method
  source:
    remote:
      path: src/WeihanLi.Redis/String/Counter.cs
      branch: dev
      repo: https://github.com/WeihanLi/weihanli.redis.git
    id: ResetAsync
    path: src/WeihanLi.Redis/String/Counter.cs
    startLine: 16
  assemblies:
  - WeihanLi.Redis
  namespace: WeihanLi.Redis
  syntax:
    content: Task<bool> ResetAsync()
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Function ResetAsync As Task(Of Boolean)
  overload: WeihanLi.Redis.ICounterClient.ResetAsync*
- uid: WeihanLi.Redis.ICounterClient.Increase
  commentId: M:WeihanLi.Redis.ICounterClient.Increase
  id: Increase
  parent: WeihanLi.Redis.ICounterClient
  langs:
  - csharp
  - vb
  name: Increase()
  nameWithType: ICounterClient.Increase()
  fullName: WeihanLi.Redis.ICounterClient.Increase()
  type: Method
  source:
    remote:
      path: src/WeihanLi.Redis/String/Counter.cs
      branch: dev
      repo: https://github.com/WeihanLi/weihanli.redis.git
    id: Increase
    path: src/WeihanLi.Redis/String/Counter.cs
    startLine: 18
  assemblies:
  - WeihanLi.Redis
  namespace: WeihanLi.Redis
  syntax:
    content: long Increase()
    return:
      type: System.Int64
    content.vb: Function Increase As Long
  overload: WeihanLi.Redis.ICounterClient.Increase*
- uid: WeihanLi.Redis.ICounterClient.Decrease
  commentId: M:WeihanLi.Redis.ICounterClient.Decrease
  id: Decrease
  parent: WeihanLi.Redis.ICounterClient
  langs:
  - csharp
  - vb
  name: Decrease()
  nameWithType: ICounterClient.Decrease()
  fullName: WeihanLi.Redis.ICounterClient.Decrease()
  type: Method
  source:
    remote:
      path: src/WeihanLi.Redis/String/Counter.cs
      branch: dev
      repo: https://github.com/WeihanLi/weihanli.redis.git
    id: Decrease
    path: src/WeihanLi.Redis/String/Counter.cs
    startLine: 20
  assemblies:
  - WeihanLi.Redis
  namespace: WeihanLi.Redis
  syntax:
    content: long Decrease()
    return:
      type: System.Int64
    content.vb: Function Decrease As Long
  overload: WeihanLi.Redis.ICounterClient.Decrease*
- uid: WeihanLi.Redis.ICounterClient.Increase(System.Int32)
  commentId: M:WeihanLi.Redis.ICounterClient.Increase(System.Int32)
  id: Increase(System.Int32)
  parent: WeihanLi.Redis.ICounterClient
  langs:
  - csharp
  - vb
  name: Increase(Int32)
  nameWithType: ICounterClient.Increase(Int32)
  fullName: WeihanLi.Redis.ICounterClient.Increase(System.Int32)
  type: Method
  source:
    remote:
      path: src/WeihanLi.Redis/String/Counter.cs
      branch: dev
      repo: https://github.com/WeihanLi/weihanli.redis.git
    id: Increase
    path: src/WeihanLi.Redis/String/Counter.cs
    startLine: 22
  assemblies:
  - WeihanLi.Redis
  namespace: WeihanLi.Redis
  syntax:
    content: long Increase(int step)
    parameters:
    - id: step
      type: System.Int32
    return:
      type: System.Int64
    content.vb: Function Increase(step As Integer) As Long
  overload: WeihanLi.Redis.ICounterClient.Increase*
- uid: WeihanLi.Redis.ICounterClient.Decrease(System.Int32)
  commentId: M:WeihanLi.Redis.ICounterClient.Decrease(System.Int32)
  id: Decrease(System.Int32)
  parent: WeihanLi.Redis.ICounterClient
  langs:
  - csharp
  - vb
  name: Decrease(Int32)
  nameWithType: ICounterClient.Decrease(Int32)
  fullName: WeihanLi.Redis.ICounterClient.Decrease(System.Int32)
  type: Method
  source:
    remote:
      path: src/WeihanLi.Redis/String/Counter.cs
      branch: dev
      repo: https://github.com/WeihanLi/weihanli.redis.git
    id: Decrease
    path: src/WeihanLi.Redis/String/Counter.cs
    startLine: 24
  assemblies:
  - WeihanLi.Redis
  namespace: WeihanLi.Redis
  syntax:
    content: long Decrease(int step)
    parameters:
    - id: step
      type: System.Int32
    return:
      type: System.Int64
    content.vb: Function Decrease(step As Integer) As Long
  overload: WeihanLi.Redis.ICounterClient.Decrease*
- uid: WeihanLi.Redis.ICounterClient.IncreaseAsync
  commentId: M:WeihanLi.Redis.ICounterClient.IncreaseAsync
  id: IncreaseAsync
  parent: WeihanLi.Redis.ICounterClient
  langs:
  - csharp
  - vb
  name: IncreaseAsync()
  nameWithType: ICounterClient.IncreaseAsync()
  fullName: WeihanLi.Redis.ICounterClient.IncreaseAsync()
  type: Method
  source:
    remote:
      path: src/WeihanLi.Redis/String/Counter.cs
      branch: dev
      repo: https://github.com/WeihanLi/weihanli.redis.git
    id: IncreaseAsync
    path: src/WeihanLi.Redis/String/Counter.cs
    startLine: 26
  assemblies:
  - WeihanLi.Redis
  namespace: WeihanLi.Redis
  syntax:
    content: Task<long> IncreaseAsync()
    return:
      type: System.Threading.Tasks.Task{System.Int64}
    content.vb: Function IncreaseAsync As Task(Of Long)
  overload: WeihanLi.Redis.ICounterClient.IncreaseAsync*
- uid: WeihanLi.Redis.ICounterClient.DecreaseAsync
  commentId: M:WeihanLi.Redis.ICounterClient.DecreaseAsync
  id: DecreaseAsync
  parent: WeihanLi.Redis.ICounterClient
  langs:
  - csharp
  - vb
  name: DecreaseAsync()
  nameWithType: ICounterClient.DecreaseAsync()
  fullName: WeihanLi.Redis.ICounterClient.DecreaseAsync()
  type: Method
  source:
    remote:
      path: src/WeihanLi.Redis/String/Counter.cs
      branch: dev
      repo: https://github.com/WeihanLi/weihanli.redis.git
    id: DecreaseAsync
    path: src/WeihanLi.Redis/String/Counter.cs
    startLine: 28
  assemblies:
  - WeihanLi.Redis
  namespace: WeihanLi.Redis
  syntax:
    content: Task<long> DecreaseAsync()
    return:
      type: System.Threading.Tasks.Task{System.Int64}
    content.vb: Function DecreaseAsync As Task(Of Long)
  overload: WeihanLi.Redis.ICounterClient.DecreaseAsync*
- uid: WeihanLi.Redis.ICounterClient.IncreaseAsync(System.Int32)
  commentId: M:WeihanLi.Redis.ICounterClient.IncreaseAsync(System.Int32)
  id: IncreaseAsync(System.Int32)
  parent: WeihanLi.Redis.ICounterClient
  langs:
  - csharp
  - vb
  name: IncreaseAsync(Int32)
  nameWithType: ICounterClient.IncreaseAsync(Int32)
  fullName: WeihanLi.Redis.ICounterClient.IncreaseAsync(System.Int32)
  type: Method
  source:
    remote:
      path: src/WeihanLi.Redis/String/Counter.cs
      branch: dev
      repo: https://github.com/WeihanLi/weihanli.redis.git
    id: IncreaseAsync
    path: src/WeihanLi.Redis/String/Counter.cs
    startLine: 30
  assemblies:
  - WeihanLi.Redis
  namespace: WeihanLi.Redis
  syntax:
    content: Task<long> IncreaseAsync(int step)
    parameters:
    - id: step
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{System.Int64}
    content.vb: Function IncreaseAsync(step As Integer) As Task(Of Long)
  overload: WeihanLi.Redis.ICounterClient.IncreaseAsync*
- uid: WeihanLi.Redis.ICounterClient.DecreaseAsync(System.Int32)
  commentId: M:WeihanLi.Redis.ICounterClient.DecreaseAsync(System.Int32)
  id: DecreaseAsync(System.Int32)
  parent: WeihanLi.Redis.ICounterClient
  langs:
  - csharp
  - vb
  name: DecreaseAsync(Int32)
  nameWithType: ICounterClient.DecreaseAsync(Int32)
  fullName: WeihanLi.Redis.ICounterClient.DecreaseAsync(System.Int32)
  type: Method
  source:
    remote:
      path: src/WeihanLi.Redis/String/Counter.cs
      branch: dev
      repo: https://github.com/WeihanLi/weihanli.redis.git
    id: DecreaseAsync
    path: src/WeihanLi.Redis/String/Counter.cs
    startLine: 32
  assemblies:
  - WeihanLi.Redis
  namespace: WeihanLi.Redis
  syntax:
    content: Task<long> DecreaseAsync(int step)
    parameters:
    - id: step
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{System.Int64}
    content.vb: Function DecreaseAsync(step As Integer) As Task(Of Long)
  overload: WeihanLi.Redis.ICounterClient.DecreaseAsync*
references:
- uid: WeihanLi.Redis
  commentId: N:WeihanLi.Redis
  name: WeihanLi.Redis
  nameWithType: WeihanLi.Redis
  fullName: WeihanLi.Redis
- uid: WeihanLi.Redis.ICounterClient.Count*
  commentId: Overload:WeihanLi.Redis.ICounterClient.Count
  name: Count
  nameWithType: ICounterClient.Count
  fullName: WeihanLi.Redis.ICounterClient.Count
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WeihanLi.Redis.ICounterClient.Base*
  commentId: Overload:WeihanLi.Redis.ICounterClient.Base
  name: Base
  nameWithType: ICounterClient.Base
  fullName: WeihanLi.Redis.ICounterClient.Base
- uid: WeihanLi.Redis.ICounterClient.Reset*
  commentId: Overload:WeihanLi.Redis.ICounterClient.Reset
  name: Reset
  nameWithType: ICounterClient.Reset
  fullName: WeihanLi.Redis.ICounterClient.Reset
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: WeihanLi.Redis.ICounterClient.ResetAsync*
  commentId: Overload:WeihanLi.Redis.ICounterClient.ResetAsync
  name: ResetAsync
  nameWithType: ICounterClient.ResetAsync
  fullName: WeihanLi.Redis.ICounterClient.ResetAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: WeihanLi.Redis.ICounterClient.Increase*
  commentId: Overload:WeihanLi.Redis.ICounterClient.Increase
  name: Increase
  nameWithType: ICounterClient.Increase
  fullName: WeihanLi.Redis.ICounterClient.Increase
- uid: WeihanLi.Redis.ICounterClient.Decrease*
  commentId: Overload:WeihanLi.Redis.ICounterClient.Decrease
  name: Decrease
  nameWithType: ICounterClient.Decrease
  fullName: WeihanLi.Redis.ICounterClient.Decrease
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: WeihanLi.Redis.ICounterClient.IncreaseAsync*
  commentId: Overload:WeihanLi.Redis.ICounterClient.IncreaseAsync
  name: IncreaseAsync
  nameWithType: ICounterClient.IncreaseAsync
  fullName: WeihanLi.Redis.ICounterClient.IncreaseAsync
- uid: System.Threading.Tasks.Task{System.Int64}
  commentId: T:System.Threading.Tasks.Task{System.Int64}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Int64>
  nameWithType: Task<Int64>
  fullName: System.Threading.Tasks.Task<System.Int64>
  nameWithType.vb: Task(Of Int64)
  fullName.vb: System.Threading.Tasks.Task(Of System.Int64)
  name.vb: Task(Of Int64)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: WeihanLi.Redis.ICounterClient.DecreaseAsync*
  commentId: Overload:WeihanLi.Redis.ICounterClient.DecreaseAsync
  name: DecreaseAsync
  nameWithType: ICounterClient.DecreaseAsync
  fullName: WeihanLi.Redis.ICounterClient.DecreaseAsync
