### YamlMime:ManagedReference
items:
- uid: WeihanLi.Redis.IRedLockClient
  commentId: T:WeihanLi.Redis.IRedLockClient
  id: IRedLockClient
  parent: WeihanLi.Redis
  children:
  - WeihanLi.Redis.IRedLockClient.Release
  - WeihanLi.Redis.IRedLockClient.ReleaseAsync
  - WeihanLi.Redis.IRedLockClient.TryLock
  - WeihanLi.Redis.IRedLockClient.TryLock(System.Nullable{System.TimeSpan})
  - WeihanLi.Redis.IRedLockClient.TryLockAsync
  - WeihanLi.Redis.IRedLockClient.TryLockAsync(System.Nullable{System.TimeSpan})
  langs:
  - csharp
  - vb
  name: IRedLockClient
  nameWithType: IRedLockClient
  fullName: WeihanLi.Redis.IRedLockClient
  type: Interface
  source:
    remote:
      path: src/WeihanLi.Redis/String/RedLock.cs
      branch: dev
      repo: https://github.com/WeihanLi/weihanli.redis.git
    id: IRedLockClient
    path: src/WeihanLi.Redis/String/RedLock.cs
    startLine: 11
  assemblies:
  - WeihanLi.Redis
  namespace: WeihanLi.Redis
  syntax:
    content: 'public interface IRedLockClient : IDisposable, IRedisClient'
    content.vb: >-
      Public Interface IRedLockClient
          Inherits IDisposable, IRedisClient
  inheritedMembers:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: WeihanLi.Redis.IRedLockClient.TryLock
  commentId: M:WeihanLi.Redis.IRedLockClient.TryLock
  id: TryLock
  parent: WeihanLi.Redis.IRedLockClient
  langs:
  - csharp
  - vb
  name: TryLock()
  nameWithType: IRedLockClient.TryLock()
  fullName: WeihanLi.Redis.IRedLockClient.TryLock()
  type: Method
  source:
    remote:
      path: src/WeihanLi.Redis/String/RedLock.cs
      branch: dev
      repo: https://github.com/WeihanLi/weihanli.redis.git
    id: TryLock
    path: src/WeihanLi.Redis/String/RedLock.cs
    startLine: 17
  assemblies:
  - WeihanLi.Redis
  namespace: WeihanLi.Redis
  summary: "\nTryGetLock\n"
  example: []
  syntax:
    content: bool TryLock()
    return:
      type: System.Boolean
      description: ''
    content.vb: Function TryLock As Boolean
  overload: WeihanLi.Redis.IRedLockClient.TryLock*
- uid: WeihanLi.Redis.IRedLockClient.TryLock(System.Nullable{System.TimeSpan})
  commentId: M:WeihanLi.Redis.IRedLockClient.TryLock(System.Nullable{System.TimeSpan})
  id: TryLock(System.Nullable{System.TimeSpan})
  parent: WeihanLi.Redis.IRedLockClient
  langs:
  - csharp
  - vb
  name: TryLock(Nullable<TimeSpan>)
  nameWithType: IRedLockClient.TryLock(Nullable<TimeSpan>)
  fullName: WeihanLi.Redis.IRedLockClient.TryLock(System.Nullable<System.TimeSpan>)
  type: Method
  source:
    remote:
      path: src/WeihanLi.Redis/String/RedLock.cs
      branch: dev
      repo: https://github.com/WeihanLi/weihanli.redis.git
    id: TryLock
    path: src/WeihanLi.Redis/String/RedLock.cs
    startLine: 24
  assemblies:
  - WeihanLi.Redis
  namespace: WeihanLi.Redis
  summary: "\nTryGetLock\n"
  example: []
  syntax:
    content: bool TryLock(TimeSpan? expiry)
    parameters:
    - id: expiry
      type: System.Nullable{System.TimeSpan}
      description: lock expiry
    return:
      type: System.Boolean
      description: ''
    content.vb: Function TryLock(expiry As TimeSpan?) As Boolean
  overload: WeihanLi.Redis.IRedLockClient.TryLock*
  nameWithType.vb: IRedLockClient.TryLock(Nullable(Of TimeSpan))
  fullName.vb: WeihanLi.Redis.IRedLockClient.TryLock(System.Nullable(Of System.TimeSpan))
  name.vb: TryLock(Nullable(Of TimeSpan))
- uid: WeihanLi.Redis.IRedLockClient.TryLockAsync
  commentId: M:WeihanLi.Redis.IRedLockClient.TryLockAsync
  id: TryLockAsync
  parent: WeihanLi.Redis.IRedLockClient
  langs:
  - csharp
  - vb
  name: TryLockAsync()
  nameWithType: IRedLockClient.TryLockAsync()
  fullName: WeihanLi.Redis.IRedLockClient.TryLockAsync()
  type: Method
  source:
    remote:
      path: src/WeihanLi.Redis/String/RedLock.cs
      branch: dev
      repo: https://github.com/WeihanLi/weihanli.redis.git
    id: TryLockAsync
    path: src/WeihanLi.Redis/String/RedLock.cs
    startLine: 30
  assemblies:
  - WeihanLi.Redis
  namespace: WeihanLi.Redis
  summary: "\nTryGetLockAsync\n"
  example: []
  syntax:
    content: Task<bool> TryLockAsync()
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: ''
    content.vb: Function TryLockAsync As Task(Of Boolean)
  overload: WeihanLi.Redis.IRedLockClient.TryLockAsync*
- uid: WeihanLi.Redis.IRedLockClient.TryLockAsync(System.Nullable{System.TimeSpan})
  commentId: M:WeihanLi.Redis.IRedLockClient.TryLockAsync(System.Nullable{System.TimeSpan})
  id: TryLockAsync(System.Nullable{System.TimeSpan})
  parent: WeihanLi.Redis.IRedLockClient
  langs:
  - csharp
  - vb
  name: TryLockAsync(Nullable<TimeSpan>)
  nameWithType: IRedLockClient.TryLockAsync(Nullable<TimeSpan>)
  fullName: WeihanLi.Redis.IRedLockClient.TryLockAsync(System.Nullable<System.TimeSpan>)
  type: Method
  source:
    remote:
      path: src/WeihanLi.Redis/String/RedLock.cs
      branch: dev
      repo: https://github.com/WeihanLi/weihanli.redis.git
    id: TryLockAsync
    path: src/WeihanLi.Redis/String/RedLock.cs
    startLine: 37
  assemblies:
  - WeihanLi.Redis
  namespace: WeihanLi.Redis
  summary: "\nTryGetLockAsync\n"
  example: []
  syntax:
    content: Task<bool> TryLockAsync(TimeSpan? expiry)
    parameters:
    - id: expiry
      type: System.Nullable{System.TimeSpan}
      description: lock expiry
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: ''
    content.vb: Function TryLockAsync(expiry As TimeSpan?) As Task(Of Boolean)
  overload: WeihanLi.Redis.IRedLockClient.TryLockAsync*
  nameWithType.vb: IRedLockClient.TryLockAsync(Nullable(Of TimeSpan))
  fullName.vb: WeihanLi.Redis.IRedLockClient.TryLockAsync(System.Nullable(Of System.TimeSpan))
  name.vb: TryLockAsync(Nullable(Of TimeSpan))
- uid: WeihanLi.Redis.IRedLockClient.Release
  commentId: M:WeihanLi.Redis.IRedLockClient.Release
  id: Release
  parent: WeihanLi.Redis.IRedLockClient
  langs:
  - csharp
  - vb
  name: Release()
  nameWithType: IRedLockClient.Release()
  fullName: WeihanLi.Redis.IRedLockClient.Release()
  type: Method
  source:
    remote:
      path: src/WeihanLi.Redis/String/RedLock.cs
      branch: dev
      repo: https://github.com/WeihanLi/weihanli.redis.git
    id: Release
    path: src/WeihanLi.Redis/String/RedLock.cs
    startLine: 43
  assemblies:
  - WeihanLi.Redis
  namespace: WeihanLi.Redis
  summary: "\nReleaseLock\n"
  example: []
  syntax:
    content: bool Release()
    return:
      type: System.Boolean
      description: ''
    content.vb: Function Release As Boolean
  overload: WeihanLi.Redis.IRedLockClient.Release*
- uid: WeihanLi.Redis.IRedLockClient.ReleaseAsync
  commentId: M:WeihanLi.Redis.IRedLockClient.ReleaseAsync
  id: ReleaseAsync
  parent: WeihanLi.Redis.IRedLockClient
  langs:
  - csharp
  - vb
  name: ReleaseAsync()
  nameWithType: IRedLockClient.ReleaseAsync()
  fullName: WeihanLi.Redis.IRedLockClient.ReleaseAsync()
  type: Method
  source:
    remote:
      path: src/WeihanLi.Redis/String/RedLock.cs
      branch: dev
      repo: https://github.com/WeihanLi/weihanli.redis.git
    id: ReleaseAsync
    path: src/WeihanLi.Redis/String/RedLock.cs
    startLine: 49
  assemblies:
  - WeihanLi.Redis
  namespace: WeihanLi.Redis
  summary: "\nReleaseLockAsync\n"
  example: []
  syntax:
    content: Task<bool> ReleaseAsync()
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: ''
    content.vb: Function ReleaseAsync As Task(Of Boolean)
  overload: WeihanLi.Redis.IRedLockClient.ReleaseAsync*
references:
- uid: WeihanLi.Redis
  commentId: N:WeihanLi.Redis
  name: WeihanLi.Redis
  nameWithType: WeihanLi.Redis
  fullName: WeihanLi.Redis
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: WeihanLi.Redis.IRedLockClient.TryLock*
  commentId: Overload:WeihanLi.Redis.IRedLockClient.TryLock
  name: TryLock
  nameWithType: IRedLockClient.TryLock
  fullName: WeihanLi.Redis.IRedLockClient.TryLock
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  nameWithType.vb: Nullable(Of TimeSpan)
  fullName.vb: System.Nullable(Of System.TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: WeihanLi.Redis.IRedLockClient.TryLockAsync*
  commentId: Overload:WeihanLi.Redis.IRedLockClient.TryLockAsync
  name: TryLockAsync
  nameWithType: IRedLockClient.TryLockAsync
  fullName: WeihanLi.Redis.IRedLockClient.TryLockAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: WeihanLi.Redis.IRedLockClient.Release*
  commentId: Overload:WeihanLi.Redis.IRedLockClient.Release
  name: Release
  nameWithType: IRedLockClient.Release
  fullName: WeihanLi.Redis.IRedLockClient.Release
- uid: WeihanLi.Redis.IRedLockClient.ReleaseAsync*
  commentId: Overload:WeihanLi.Redis.IRedLockClient.ReleaseAsync
  name: ReleaseAsync
  nameWithType: IRedLockClient.ReleaseAsync
  fullName: WeihanLi.Redis.IRedLockClient.ReleaseAsync
